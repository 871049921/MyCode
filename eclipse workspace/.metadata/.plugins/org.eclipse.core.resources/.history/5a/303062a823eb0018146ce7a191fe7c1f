package experiment3;

import java.awt.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

import org.omg.CORBA.PUBLIC_MEMBER;

public class Experiment3 {
	public static void main(String[] args) {
		File_IO file = new File_IO();
		FormList list = new FormList();
		ArrayList<String> aList = list.setRandomShowList();//接受随机产生节目表的文件信息
		ArrayList<String> showList = new ArrayList<>();
		ArrayList<Integer> numbers = new ArrayList<Integer>();//获取序号
		
		ArrayList<FishShow> listOfFish = new ArrayList<FishShow>();//鱼类表演列表
		ArrayList<MammalShow> listOfMammal = new ArrayList<MammalShow>();//海洋哺乳类表演列表
		ArrayList<ReptileShow> listOfReptile = new ArrayList<ReptileShow>();//爬行动物类表演列表
		
		int cruuentMinute = 480;//八点开始
		
		formList(showList);//生成节目表
		numbers = getAllNumber(showList);//获取所有序号
		formObject(numbers);
		
	}
		
		
	
	//生成节目表
	public static void formList(ArrayList<String> showList) {
		showList.add("show prepare");
		showList.add("entrance start");
		showList.add("entrance end"); 
		showList.add("10000 start");
		showList.add("10001 start");
		showList.add("10002 start");
		showList.add("20000 start");
		showList.add("20001 start");
		showList.add("20002 start");
		showList.add("30000 start");
		showList.add("30001 start");
		showList.add("30002 start");
		showList.add("90000 start");
		showList.add("show end");
	}
	
	//生成对象
	public static void formObject(ArrayList<Integer> numbers) {
		for (int i = 0; i < numbers.size(); i++) {
			if (numbers.get(i) >=10000 && numbers.get(i) < 20000) {//鱼类
				
			}
		}
	}
	
	//处理喂食动物
	public static void dealWithFeed(ArrayList<String> aList) {
		Scanner input = new Scanner(System.in);
		ArrayList<Integer> numbers = getAllNumber(aList);
		while (!numbers.isEmpty()) {
			String feed = input.nextLine();
			String[] feeds = feed.split(" ");
			int number = Integer.parseInt(feeds[0]);
			if (aList.contains(number)) {
				System.out.println();
				aList.remove(aList.indexOf(number));
			}
		}
	}
	
	//获得所有序号
	public static ArrayList<Integer> getAllNumber(ArrayList<String> aList) {
		ArrayList<Integer> numbers = new ArrayList<Integer>();
		int i = 2;
		while (!aList.get(i).equals("show end")) {
			String feed = aList.get(i);
			String[] feeds = feed.split(" ");
			int number = Integer.parseInt(feeds[0]);
			numbers.add(number);
			i++;
		}
		return numbers;
	}
}
